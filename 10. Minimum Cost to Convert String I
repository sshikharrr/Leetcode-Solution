class Solution {
public:
    void help(vector<vector<long long>>&v,vector<char>&o,vector<char>&ch,vector<int>c){
        for(int i=0;i<o.size();i++){
            int s=o[i]-'a';
            int t=ch[i]-'a';
            v[s][t]=min(v[s][t],(long long)c[i]);
        }
        for(int i=0;i<26;i++){
            for(int j=0;j<26;j++){
                for(int k=0;k<26;k++){
                    v[j][k]=min(v[j][k],v[j][i]+v[i][k]);
                }
            }
        }
    }
    long long minimumCost(string source, string target, vector<char>& original, vector<char>& changed, vector<int>& cost) {
        vector<vector<long long>>v(26,vector<long long>(26,INT_MAX));
        help(v,original,changed,cost);
        long long ans=0;
        for(int i=0;i<source.length();i++){
            if(source[i]==target[i]){
                continue;
            }
            if(v[source[i]-'a'][target[i]-'a']==INT_MAX){
                return -1;
            }
            ans+=v[source[i]-'a'][target[i]-'a'];
        }
        return ans;
    }
};
